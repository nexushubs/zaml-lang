{"version":3,"sources":["App.tsx","sample/contract.ts","serviceWorker.ts","index.tsx","Editor/Pane.tsx","Editor/Editor.tsx","Editor/logo.svg","TreeView/TreeNode.tsx","TreeView/TreePathItem.tsx","TreeView/TreePath.tsx","TreeView/TreeToolbar.tsx","TreeView/TreePropEditor.tsx","Common/TabView.tsx","TreeView/TreeView.tsx","SourceEditor/codemirror-mode.ts","SourceEditor/SourceEditor.tsx","VisualEditor/VisualNode.tsx","VisualEditor/VisualEditor.tsx"],"names":["App","react_default","a","createElement","className","Editor","defaultSource","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Pane","props","Object","_Users_alvin_Projects_nexushubs_zaml_lang_packages_zaml_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_alvin_Projects_nexushubs_zaml_lang_packages_zaml_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_alvin_Projects_nexushubs_zaml_lang_packages_zaml_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_this$props","title","children","react__WEBPACK_IMPORTED_MODULE_5___default","classNames","React","defaultProps","Node","zaml","NodeType","parse","source","node","create","ROOT","global","console","info","err","message","concat","from","ln","col","to","sourceBlock","querySelector","text","line","sourceText","findOneBy","type","TEXT","content","createEntitiesFromText","start","end","error","_this","state","root","sourcePaneHeight","onResize","_","throttle","bind","_Users_alvin_Projects_nexushubs_zaml_lang_packages_zaml_editor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","preventSourceChange","addEventListener","passive","removeEventListener","nextProps","nextState","selectedNode","log","height","innerHeight","setState","undefined","selected","_this2","toSource","simple","_this3","_this$state","hoveredNode","react__WEBPACK_IMPORTED_MODULE_7___default","href","_svgr_webpack_prettier_svgo_logo_svg__WEBPACK_IMPORTED_MODULE_16__","react_split_pane__WEBPACK_IMPORTED_MODULE_9__","split","defaultSize","minSize","_Pane__WEBPACK_IMPORTED_MODULE_10__","_SourceEditor_SourceEditor__WEBPACK_IMPORTED_MODULE_11__","value","onChange","handleSourceChange","_VisualEditor_VisualEditor__WEBPACK_IMPORTED_MODULE_12__","onSelect","n","r","handleNodeChange","_TreeView_TreeView__WEBPACK_IMPORTED_MODULE_17__","onHover","__webpack_require__","d","__webpack_exports__","SvgComponent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_extends","assign","target","i","arguments","length","key","prototype","hasOwnProperty","apply","_ref","_ref2","fill","_ref3","_ref4","cx","cy","_ref5","_ref6","x","y","width","rx","ry","_ref7","_ref8","points","id","data-name","viewBox","p","NodePart","nil","TreeNode","classCallCheck","possibleConstructorReturn","getPrototypeOf","_selectedPart","selectedPart","expandedNodes","onSelectPart","onExpansionChange","onMouseEnter","onMouseOut","expanded","indexOf","isRoot","Whole","Header","onClick","event","stopPropagation","commonProps","_onMouseEnter","_x","toString","_onMouseOut","_x2","isEmpty","react","map","child","ENTITY","isBlock","isWrappingTag","onlyText","isEntity","isTag","TAG","firstChild","name","node-selected","openDescriptorStart","labels","label","keys","attributes","JSON","stringify","openDescriptorEnd","truncate","Footer","closingDescriptor","TreePathItem","descriptor","TreePath","nodeList","buildNodeList","includes","list","unshift","parent","TreePathItem_TreePathItem","TreeToolbar","Tab","TabView","tabs","selectedTab","onTabChange","tab","values","defaultTab","defaultEditingIndex","TreePropEditor","editingIndex","inlineError","editingElement","renderEmptyTip","Labels","renderLabelEditor","Attributes","renderAttributeEditor","Metadata","metadata","focus","select","index","focusEditingElement","originalLabel","e","addLabel","removeLabel","cancelLabelEditing","toConsumableArray","ref","defaultValue","onBlur","handleLabelUpdate","currentTarget","onKeyDown","handleLabelEdit","_this4","renderValue","_this5","TabView_TabView","renderTabContent","TreeView","without","nodeIds","path","union","index_esm","TreeToolbar_TreeToolbar","TreeNode_TreeNode","handleExpansionChange","TreePath_TreePath","TreePropEditor_TreePropEditor","CodeMirror","defineSimpleMode","regex","token","next","indent","dedent","comment","meta","dontIndentStates","lineComment","codeMirrorOptions","mode","lineNumbers","lineWrapping","SourceEditor","editor","setSize","setValue","react_codemirror2","options","onBeforeChange","data","_onChange","_x3","editorDidMount","VisualNode","element","PARAGRAPH","node-name","node-id","url","push","block","toLowerCase","VisualEditor","ContextMenuTarget","handleContextMenu","currentNode","selection","getSelection","rangeCount","range","getRangeAt","domNode","startContainer","textContent","preventDefault","punctuationPattern","startPos","endPos","pos","exec","lastIndex","startOffset","setStart","setEnd","commonNode","getNodeByElement","commonAncestorContainer","startNode","endNode","endContainer","createBlockByRange","endOffset","removeAllRanges","_this$props2","flatten","_this$props3","anchorNode","focusNode","createEntities","alert","_this$props4","removeEntity","_this$props5","splitText","nodeType","TEXT_NODE","classList","contains","parentElement","getAttribute","getNodeById","_this$props6","onDoubleClick","handleDoubleClick","VisualNode_VisualNode","commonEntityNames","wrapperNode","menu","menuItem","disabled","menuDivider","handleCreateBlock","handleRemoveBlock","handleSplitSentences","handleCreateEntity","prompt","handleRemoveEntity","handleInspect"],"mappings":"oXAgBeA,mLARX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,cCVF,i6JDKIC,aEOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,0JE1HEC,cAYnB,SAAAA,EAAYC,GAAe,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACnBH,0EAGC,IAAAO,EACgCJ,KAAKH,MAApCQ,EADDD,EACCC,MAAO7B,EADR4B,EACQ5B,UAAW8B,EADnBF,EACmBE,SAC1B,OACEC,EAAAjC,EAAAC,cAAA,OAAKC,UAAWgC,IAAW,OAAQhC,IACjC+B,EAAAjC,EAAAC,cAAA,OAAKC,UAAU,cAAa+B,EAAAjC,EAAAC,cAAA,UAAK8B,IACjCE,EAAAjC,EAAAC,cAAA,OAAKC,UAAU,gBACZ8B,WAtBuBG,IAAM9B,WAAnBiB,EAOZc,aAAsB,CAC3BL,MAAO,OACP7B,UAAW,oPCJPmC,EAAmBC,OAAbC,EAAaD,WAgBrBE,EAAQ,SAACC,GACb,IAAIC,EAAOL,EAAKM,OAAOJ,EAASK,MAChC,IACEF,EAAOJ,QAAWG,GACjBI,EAAeH,KAAOA,EACvBI,QAAQC,KAAK,+CAAgDL,GAC7D,MAAMM,GACN,GAAIA,aAAeV,aAAiB,CAClC,IAAMW,EAAO,iDAAAC,OAC2BF,EAAIC,QAD/B,sEAAAC,OAMQF,EAAIG,KAAKC,GANjB,KAAAF,OAMuBF,EAAIG,KAAKE,IANhC,mBAAAH,OAMqDF,EAAIM,GAAGF,GAN5D,KAAAF,OAMkEF,EAAIM,GAAGD,IANzE,aASPE,GADNb,EAAOJ,QAAWW,IACOO,cAAc,WAC/BC,EAAST,EAAIG,KAAKO,KAAlBD,KACR,IAAKF,EAAa,OAAOb,EACzB,IAAMiB,EAAaJ,EAAYK,UAAU,CAACC,KAAMtB,EAASuB,OACzD,IAAKH,EAAY,OAAOjB,EACxBiB,EAAWI,QAAX,GAAAb,OAAwBO,EAAxB,KACAE,EAAWK,uBAAuB,CAAC,CACjCH,KAAM,QACNI,MAAOjB,EAAIG,KAAKE,IAAM,EACtBa,IAAKlB,EAAIM,GAAGD,IAAM,UAGpBX,EAAOJ,QAAA,WAAAY,OAAsBF,EAAIC,QAA1B,eACPH,QAAQqB,MAAMnB,GAGlB,OAAON,GAGYvC,cAenB,SAAAA,EAAYoB,GAAc,IAAA6C,EAAA,OAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAAvB,IACxBiE,EAAA5C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAArB,GAAA0B,KAAAH,KAAMH,KACD8C,MAAQ,CACX5B,OAAQlB,EAAMnB,cACdkE,KAAM9B,EAAMjB,EAAMnB,eAClBmE,kBAAmB,GAErBH,EAAKI,SAAWC,IAAEC,SAASN,EAAKI,SAASG,KAAdnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA4C,KAA0B,KACrDA,EAAKS,qBAAsB,EARHT,mFAYxB7D,OAAOuE,iBAAiB,SAAUpD,KAAK8C,SAAU,CAAEO,SAAS,IAC5DrD,KAAK8C,0DAILjE,OAAOyE,oBAAoB,SAAUtD,KAAK8C,4DAGlBS,gDAGNA,EAAkBC,GAChCA,EAAUC,eAAiBzD,KAAK2C,MAAMc,cACxCrC,QAAQsC,IAAI,iBAAkBF,EAAUC,cAEtCD,EAAUZ,OAAS5C,KAAK2C,MAAMC,MAChCxB,QAAQsC,IAAI,YAAaF,EAAUZ,yCAKrC,IAAMe,EAAS9E,OAAO+E,YAAc,GACpC5D,KAAK6D,SAAS,CACZhB,iBAAkBc,+CAIH5C,GACbf,KAAKmD,qBACTnD,KAAK6D,SAAS,CACZjB,KAAM9B,EAAMC,GACZ0C,kBAAcK,6CAIDlB,EAAkBmB,GAAsB,IAAAC,EAAAhE,KAClD4C,IACL5C,KAAKmD,qBAAsB,EAC3BnD,KAAK6D,SAAS,CACZ9C,OAAQ6B,EAAKqB,SAAS,CAAEC,QAAQ,IAChCT,aAAcM,GACb,WACDC,EAAKb,qBAAsB,sCAItB,IAAAgB,EAAAnE,KACCe,EAAWf,KAAK2C,MAAhB5B,OADDqD,EAEuDpE,KAAK2C,MAA3DC,EAFDwB,EAECxB,KAAMC,EAFPuB,EAEOvB,iBAAkBY,EAFzBW,EAEyBX,aAAcY,EAFvCD,EAEuCC,YAC9C,OACEC,EAAAhG,EAAAC,cAAA,OAAKC,UAAU,eACb8F,EAAAhG,EAAAC,cAAA,cACE+F,EAAAhG,EAAAC,cAAA,KAAGC,UAAU,eAAe+F,KAAK,2EAA0ED,EAAAhG,EAAAC,cAACiG,EAAA,EAAD,CAAMhG,UAAU,SAA3H,WACA8F,EAAAhG,EAAAC,cAAA,KAAGC,UAAU,cAAc+F,KAAK,0CAAhC,mBAEFD,EAAAhG,EAAAC,cAAA,WAASC,UAAU,gBACjB8F,EAAAhG,EAAAC,cAACkG,EAAA,EAAD,CACEC,MAAM,WACNC,YAAY,SACZC,QAAS,KAETN,EAAAhG,EAAAC,cAACsG,EAAA,EAAD,CAAMxE,MAAM,UACViE,EAAAhG,EAAAC,cAACuG,EAAA,EAAD,CACEC,MAAOhE,EACP4C,OAAQd,EAAmB,GAC3BmC,SAAU,SAACD,GAAD,OAAmBZ,EAAKc,mBAAmBF,OAGzDT,EAAAhG,EAAAC,cAACkG,EAAA,EAAD,CAAWC,MAAM,WAAWC,YAAY,OACtCL,EAAAhG,EAAAC,cAACsG,EAAA,EAAD,CAAMxE,MAAM,UACViE,EAAAhG,EAAAC,cAAC2G,EAAA,EAAD,CACEtC,KAAMA,EACNa,aAAcY,GAAeZ,EAC7B0B,SAAU,SAAAC,GAAC,OAAIjB,EAAKN,SAAS,CAAEJ,aAAc2B,KAC7CJ,SAAU,SAACK,EAAeD,GAAhB,OAAkCjB,EAAKmB,iBAAiBD,EAAGD,OAGzEd,EAAAhG,EAAAC,cAACsG,EAAA,EAAD,CAAMxE,MAAM,OACViE,EAAAhG,EAAAC,cAACgH,EAAA,EAAD,CACE3C,KAAMA,EACNa,aAAcA,EACd0B,SAAU,SAAAC,GAAC,OAAIjB,EAAKN,SAAS,CAAEJ,aAAc2B,KAC7CI,QAAS,SAAAJ,GAAC,OAAIjB,EAAKN,SAAS,CAAEQ,YAAae,KAC3CJ,SAAU,SAAAI,GAAC,OAAIjB,EAAKmB,iBAAiB1C,EAAMwC,kBA9GzB3E,IAAM9B,WAArBF,EAOZiC,aAAsB,CAC3BhC,cAAe,GACfF,UAAW,GACXwG,SAAU,kEC5EdS,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAL,EAAAS,GAAA,SAAAE,IAAmR,OAA9PA,EAAAjG,OAAAkG,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAnF,EAAAoF,UAAAD,GAA2B,QAAAG,KAAAtF,EAA0BjB,OAAAwG,UAAAC,eAAApG,KAAAY,EAAAsF,KAAyDJ,EAAAI,GAAAtF,EAAAsF,IAAiC,OAAAJ,IAAkBO,MAAAxG,KAAAmG,WAInR,IAAAM,EAEAX,EAAAxH,EAAKC,cAAA,0BAELmI,EAEAZ,EAAAxH,EAAKC,cAAA,QACLoI,KAAA,OACAjB,EAAA,6HAGAkB,EAEAd,EAAAxH,EAAKC,cAAA,QACLoI,KAAA,OACAjB,EAAA,iDAGAmB,EAEAf,EAAAxH,EAAKC,cAAA,UACLoI,KAAA,OACAG,GAAA,GACAC,GAAA,KACA1B,EAAA,IAGA2B,EAEAlB,EAAAxH,EAAKC,cAAA,QACLoI,KAAA,OACAjB,EAAA,iuGAGAuB,EAEAnB,EAAAxH,EAAKC,cAAA,QACLoI,KAAA,OACAO,EAAA,IACAC,EAAA,KACAC,MAAA,MACAzD,OAAA,GACA0D,GAAA,IACAC,GAAA,MAGAC,EAEAzB,EAAAxH,EAAKC,cAAA,QACLoI,KAAA,OACAO,EAAA,OACAC,EAAA,MACAC,MAAA,KACAzD,OAAA,SAGA6D,EAEA1B,EAAAxH,EAAKC,cAAA,WACLoI,KAAA,OACAc,OAAA,qJAGA7B,EAAA,SAAA/F,GACA,OAASiG,EAAAxH,EAAKC,cAAA,MAAAwH,EAAA,CACd2B,GAAA,UACAC,YAAA,UACAC,QAAA,eACG/H,GAAA4G,EAAAC,EAAAE,EAAAC,EAAAG,EAAAC,EAAAM,EAAAC,IAGY/B,EAAAoC,uCClEHC,wHAFJjH,UAAaD,sBAETkH,mEAMZ,IAAMC,EAAM,aAiBSC,cAkBnB,SAAAA,EAAYnI,GAAe,OAAAC,OAAAmI,EAAA,EAAAnI,CAAAE,KAAAgI,GAAAlI,OAAAoI,EAAA,EAAApI,CAAAE,KAAAF,OAAAqI,EAAA,EAAArI,CAAAkI,GAAA7H,KAAAH,KACnBH,0EAGC,IAAA6C,EAAA1C,KAAAI,EAWHJ,KAAKH,MATPmB,EAFKZ,EAELY,KACAyC,EAHKrD,EAGLqD,aACc2E,EAJThI,EAILiI,aACAC,EALKlI,EAKLkI,cACAnD,EANK/E,EAML+E,SACAoD,EAPKnI,EAOLmI,aACAC,EARKpI,EAQLoI,kBACAC,EATKrI,EASLqI,aACAC,EAVKtI,EAULsI,WAEF,IAAK1H,EAAM,OAAO,KAClB,IAAIqH,EAAeD,EACbO,EAAWL,EAAcM,QAAQ5H,EAAK0G,KAAO,GAAK1G,EAAK6H,OACzDF,GAAYN,IAAiBP,EAASgB,QACxCT,EAAeP,EAASiB,QAE1B,IAAMhF,EAAWN,IAAiBzC,EAC5BgI,EAAU,SAACX,GAAD,OAA4B,SAACY,GAC3CA,EAAMC,kBACN/D,EAASnE,GACTuH,EAAaF,KAETc,EAAc,CAClBV,aAAY,SAAAW,GAAA,SAAAX,EAAAY,GAAA,OAAAD,EAAA5C,MAAAxG,KAAAmG,WAAA,OAAAsC,EAAAa,SAAA,kBAAAF,EAAAE,YAAAb,EAAA,CAAE,SAACQ,GACbA,EAAMC,kBACNT,EAAazH,KAEf0H,WAAU,SAAAa,GAAA,SAAAb,EAAAc,GAAA,OAAAD,EAAA/C,MAAAxG,KAAAmG,WAAA,OAAAuC,EAAAY,SAAA,kBAAAC,EAAAD,YAAAZ,EAAA,CAAE,SAACO,GACXA,EAAMC,kBACNR,EAAW1H,MAGXV,EAAgB,KAUpB,GATKyC,IAAE0G,QAAQzI,EAAKV,UAMK,SAAdU,EAAKmB,OACd7B,EAAWU,EAAKqB,SANhB/B,EACEoJ,EAAA,qBAAKrD,IAAI,WAAW7H,UAAU,YAC3BuE,IAAE4G,IAAI3I,EAAKV,SAAU,SAACsJ,EAAO1D,GAAR,OAAcwD,EAAA,cAAC1B,EAADlI,OAAAkG,OAAA,GAActD,EAAK7C,MAAnB,CAA0BwG,IAAKH,EAAGlF,KAAM4I,QAM9E5I,EAAKmB,OAAStB,EAASuB,KACzB,OACEsH,EAAA,oBAAA5J,OAAAkG,OAAA,CACExH,UAAWgC,IAAW,OAAQ,CAAEuD,aAChCiF,QAASA,EAAQlB,EAASgB,QACtBK,GAHN,IAKInI,EAAKqB,QALT,KAQG,GAAIrB,EAAKmB,OAAStB,EAASgJ,QAAU7I,EAAK8I,SAAW9I,EAAK+I,cAAe,CAC9E,IAEIC,EAFEC,EAAWjJ,EAAKmB,OAAStB,EAASgJ,OAClCK,EAAQlJ,EAAKmB,OAAStB,EAASsJ,IAER,IAAzBnJ,EAAKV,SAAS8F,QAAiBpF,EAAKoJ,WAAyBjI,OAAStB,EAASuB,OACjF4H,EAAYhJ,EAAKoJ,WAAyB/H,SAEhC6H,GAASD,EAAYjJ,EAAKqJ,KAAOrJ,EAAKmB,KAClD,OACEuH,EAAA,oBAAA5J,OAAAkG,OAAA,CACExH,UAAWgC,IAAW,QAAS,CAC7BmI,WACA5E,SAAUA,GAAYsE,IAAiBP,EAASgB,MAChDwB,gBAAiBvG,IAEnBiF,QAASL,OAAW7E,EAAYkF,EAAQlB,EAASgB,QAC7CK,GAEHnI,EAAKmB,OAAStB,EAASK,MACtBwI,EAAA,sBACElL,UAAU,YACVwK,QAAS,SAACC,GACRA,EAAMC,kBACNV,EAAkBxH,GAAO2H,KAJ7B,UAQFe,EAAA,sBACElL,UAAWgC,IAAW,SAAU,CAAEuD,SAAUA,GAAYsE,IAAiBP,EAASiB,SAClFC,QAASL,EAAWK,EAAQlB,EAASiB,aAAUjF,GAE9C9C,EAAKuJ,oBACLvJ,EAAKwJ,OAAOb,IAAI,SAAAc,GAAK,OACpBf,EAAA,sBAAMrD,IAAKoE,EAAOjM,UAAU,cAA5B,IAA2CiM,KAE5C1H,IAAE2H,KAAK1J,EAAK2J,YAAYhB,IAAI,SAAAtD,GAC3B,IAAMtB,EAAQ/D,EAAK2J,WAAWtE,GAC9B,OACEqD,EAAA,sBAAMrD,IAAKA,EAAK7H,UAAU,kBACxBkL,EAAA,sBAAMlL,UAAU,OAAO6H,GACvBqD,EAAA,sBAAMlL,UAAU,cAAhB,KACAkL,EAAA,sBAAMlL,UAAU,SAASoM,KAAKC,UAAU9F,OAI7C/D,EAAK8J,mBAEPnC,EAAWrI,EACVoJ,EAAA,sBAAMlL,UAAU,YAAYuE,IAAEgI,SAASf,EAAU,CAAE5D,OAAQ,MAAS,OAEtEsD,EAAA,sBACElL,UAAWgC,IAAW,SAAU,CAAEuD,SAAUA,GAAYsE,IAAiBP,EAASkD,SAClFhC,QAASL,EAAWK,EAAQlB,EAASkD,aAAUlH,GAE9C9C,EAAKiK,oBAKZ,OAAO,YAvIyBxK,aAAjBuH,EAMZtH,aAAsB,CAC3BM,UAAM8C,EACNwE,cAAe,GACf7E,kBAAcK,EACduE,aAAcP,EAASgB,MACvB3D,SAAU4C,EACVQ,aAAcR,EACdS,kBAAmBT,EACnBU,aAAcV,EACdW,WAAYX,GCxCKnH,eAQAsK,mLAYV,IAAA9K,EAC6BJ,KAAKH,MAAjCkE,EADD3D,EACC2D,SAAU/C,EADXZ,EACWY,KAAMgI,EADjB5I,EACiB4I,QACxB,OAAKhI,EAIH3C,EAAAC,EAAAC,cAAA,QACEC,UAAWgC,IAAW,sBAAuBQ,EAAKmB,KAAM,CAAE4B,aAC1DiF,QAASA,GAERhI,EAAKmK,YAPD,YAf6B1K,IAAM9B,WAA3BuM,EAMZxK,aAAsB,CAC3BqD,UAAU,EACV/C,UAAM8C,EACNkF,QAAS,kBCRQoC,cAWnB,SAAAA,EAAYvL,GAAc,IAAA6C,EAAA,OAAA5C,OAAAmI,EAAA,EAAAnI,CAAAE,KAAAoL,IACxB1I,EAAA5C,OAAAoI,EAAA,EAAApI,CAAAE,KAAAF,OAAAqI,EAAA,EAAArI,CAAAsL,GAAAjL,KAAAH,KAAMH,KACD8C,MAAQ,CACX0I,SAAU3I,EAAK4I,cAAczL,EAAM4D,eAHbf,yFAOAa,GAAkB,IAClC8H,EAAarL,KAAK2C,MAAlB0I,SACFrK,EAAOuC,EAAUE,aAClBzC,EAIO+B,IAAEwI,SAASF,EAAUrK,IAC/BhB,KAAK6D,SAAS,CACZwH,SAAUrL,KAAKsL,cAActK,KAL/BhB,KAAK6D,SAAS,CACZwH,SAAU,2CASFrK,GAEZ,IADA,IAAIwK,EAAoB,GACjBxK,GACLwK,EAAKC,QAAQzK,GACbA,EAAOA,EAAK0K,OAEd,OAAOF,mCAGA,IAAApL,EAC4BJ,KAAKH,MAAhC4D,EADDrD,EACCqD,aAAc0B,EADf/E,EACe+E,SACdkG,EAAarL,KAAK2C,MAAlB0I,SACR,OACEhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZ6M,EAAS1B,IAAI,SAAAvE,GAAC,OACb/G,EAAAC,EAAAC,cAACoN,EAAD,CACEtF,IAAKjB,EAAEsC,GACP3D,SAAUqB,IAAM3B,EAChBzC,KAAMoE,EACN4D,QAAS,kBAAM7D,EAASC,gBAnDE3E,IAAM9B,WAAvByM,EAMZ1K,aAAsB,CAC3B+C,kBAAcK,EACdqB,SAAU,kBChBOyG,6MAQnBjJ,MAAQ,2EAIN,OACEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,kBAbmCiC,IAAM9B,WAA1BiN,EAKZlL,aAAsB,qBCO1BmL,ECVgBC,mLAEV,IAAA1L,EAC8CJ,KAAKH,MAAlDkM,EADD3L,EACC2L,KAAMC,EADP5L,EACO4L,YAAaC,EADpB7L,EACoB6L,YAAa3L,EADjCF,EACiCE,SACxC,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACXuN,EAAKpC,IAAI,SAAAuC,GAAG,OACX7N,EAAAC,EAAAC,cAAA,MACE8H,IAAK6F,EACL1N,UAAWgC,IAAW,MAAO,CAAEuD,SAAUmI,IAAQF,IACjDhD,QAAS,kBAAMiD,EAAYC,KAE3B7N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAS0N,OAI/B7N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZ8B,WAlB0BG,IAAM9B,qBDUtCkN,iFAML,IAAME,EAAOhJ,IAAEoJ,OAAON,GAChBO,EAAaL,EAAK,GAClBM,GAAuB,EAERC,6MAUnB3J,MAAQ,CACNqJ,YAAaI,EACbG,aAAcF,EACdG,YAAa,MAGfC,eAA0C,8FAEhBlJ,GACpBA,EAAUvC,OAAShB,KAAKH,MAAMmB,MAChChB,KAAK6D,SAAS,CACZmI,YAAaI,EACbG,aAAcF,wCAKRtH,GACV,OAAIA,aAAiBnE,OACZmE,EAAMd,WAEN2G,KAAKC,UAAU9F,4CAKxB,OACE1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,mEAIe,IACTwC,EAAShB,KAAKH,MAAdmB,KACAgL,EAAgBhM,KAAK2C,MAArBqJ,YACR,IAAKhL,EACH,OAAOhB,KAAK0M,iBAEd,OAAOV,GACL,KAAKH,EAAIc,OACP,OAAO3M,KAAK4M,kBAAkB5L,GAChC,KAAK6K,EAAIgB,WACP,OAAO7M,KAAK8M,sBAAsB9L,EAAMA,EAAK2J,YAC/C,KAAKkB,EAAIkB,SACP,OAAO/M,KAAK8M,sBAAsB9L,EAAMA,EAAKgM,yDAK7ChN,KAAKyM,iBACPzM,KAAKyM,eAAeQ,QACpBjN,KAAKyM,eAAeS,kDAIRC,GAAe,IAAAnJ,EAAAhE,KAC7BA,KAAK6D,SAAS,CAAE0I,aAAcY,GAAS,WACrCnJ,EAAKoJ,kEAIS3C,GAAe,IAAArK,EACJJ,KAAKH,MAAxBmB,EADuBZ,EACvBY,KAAMgE,EADiB5E,EACjB4E,SACNuH,EAAiBvM,KAAK2C,MAAtB4J,aACR,GAAKvL,EAAL,CACA,IAAMqM,EAAgBrM,EAAKwJ,OAAO+B,IAAiB,GACnD,GAAI9B,IAAU4C,EAAe,CAC3B,IACEzM,QAAA,YAAAY,OAAuBiJ,EAAvB,sBACA,MAAO6C,GAEP,YADAtN,KAAK6D,SAAS,CAAE2I,YAAa,kBAG3BD,IAAiBvL,EAAKwJ,OAAOpE,OAC/BpF,EAAKuM,SAAS9C,GAEA,KAAVA,GAAgBzJ,EAAKwJ,OAAO5B,QAAQ6B,IAAU,EAChDzJ,EAAKwM,YAAYH,GAEjBrM,EAAKwJ,OAAO+B,GAAgB9B,EAIlCzK,KAAKyN,qBACLzI,EAAShE,iDAIThB,KAAK6D,SAAS,CACZ0I,aAAcF,EACdG,YAAa,+CAICxL,GAAiB,IAAAmD,EAAAnE,KAAAoE,EACKpE,KAAK2C,MAAnC4J,EADyBnI,EACzBmI,aAAcC,EADWpI,EACXoI,YAChBhC,EAAM1K,OAAA4N,EAAA,EAAA5N,CAAOkB,EAAKwJ,QAAZhJ,OAAA,CAAoB,KAChC,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACCiM,EAAOb,IAAI,SAACc,EAAOvE,GAAR,OACV7H,EAAAC,EAAAC,cAAA,MACE8H,IAAKoE,EACLjM,UAAWgC,IAAW,CAAEiC,MAAOyD,IAAMqG,GAAgBC,KAErDnO,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUiM,GAASvE,IAAMqG,EAAe,IAAK,IAC1DrG,IAAMqG,EACLlO,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEoP,IAAK,SAAAA,GAAG,OAAIxJ,EAAKsI,eAAiBkB,GAClCC,aAAcnD,EACdoD,OAAQ,SAAC5E,GACP9E,EAAK2J,kBAAkB7E,EAAM8E,cAAchJ,QAE7CiJ,UAAW,SAAC/E,GACQ,UAAdA,EAAM5C,IACRlC,EAAK2J,kBAAkB7E,EAAM8E,cAAchJ,OACpB,WAAdkE,EAAM5C,KACflC,EAAKsJ,yBAMbpP,EAAAC,EAAAC,cAAA,MACEC,UAAU,WACVwK,QAAS,kBAAM7E,EAAK8J,gBAAgB/H,KAEnCuE,uDAWKzJ,EAAiBnB,GAAoB,IAAAqO,EAAAlO,KACnD0K,EAAO5K,OAAO4K,KAAK7K,GACzB,OACExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACGmM,EAAKf,IAAI,SAAAtD,GAAG,OACXhI,EAAAC,EAAAC,cAAA,MAAI8H,IAAKA,GACPhI,EAAAC,EAAAC,cAAA,UAAK8H,GACLhI,EAAAC,EAAAC,cAAA,UAAK2P,EAAKC,YAAYtO,EAAMwG,4CASjC,IAAA+H,EAAApO,KAECgM,GADShM,KAAKH,MAAdmB,KACgBhB,KAAK2C,MAArBqJ,aACR,OACE3N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC8P,EAAD,CACEtC,KAAMA,EACNC,YAAaA,EACbC,YAAa,SAACC,GAAD,OAAiBkC,EAAKvK,SAAS,CAAEmI,YAAaE,MAE1DlM,KAAKsO,4BAjL4B7N,IAAM9B,WAA7B2N,EAMZ5L,aAAsB,CAC3BsE,SAAU,qDEbd,IAAM+C,EAAM,aAESwG,6MAWnB5L,MAAQ,CACN0F,aAAcP,EAASiB,OACvBT,cAAe,yFAGKtH,EAAiB2H,GAAmB,IAChDlF,EAAiBzD,KAAKH,MAAtB4D,aACA6E,EAAkBtI,KAAK2C,MAAvB2F,cACJ7E,IAAiBzC,GACnBhB,KAAK6D,SAAS,CACZwE,aAAcM,EAAWb,EAASiB,OAASjB,EAASgB,QAGpDH,IAAa5F,IAAEwI,SAASjD,EAAetH,EAAK0G,IAC9C1H,KAAK6D,SAAS,CACZyE,cAAcxI,OAAA4N,EAAA,EAAA5N,CAAKwI,GAAN9G,OAAA,CAAqBR,EAAK0G,QAE/BiB,GAAY5F,IAAEwI,SAASjD,EAAetH,EAAK0G,KACrD1H,KAAK6D,SAAS,CACZyE,cAAevF,IAAEyL,QAAQlG,EAAetH,EAAK0G,wDAKzBnE,GAAkB,IAClCE,EAAiBF,EAAjBE,aACR,GAAIA,GAAgBA,IAAiBzD,KAAKH,MAAM4D,aAAc,KACpD6E,EAAkBtI,KAAK2C,MAAvB2F,cACFmG,EAAUhL,EAAaiL,KAAK/E,IAAI,SAAAvE,GAAC,OAAIA,EAAEsC,KAC7C1H,KAAK6D,SAAS,CACZyE,cAAevF,IAAE4L,MAAMrG,EAAemG,uCAKnC,IAAAzK,EAAAhE,KAAAI,EAOHJ,KAAKH,MALP+C,EAFKxC,EAELwC,KACAa,EAHKrD,EAGLqD,aACA0B,EAJK/E,EAIL+E,SACAK,EALKpF,EAKLoF,QACAR,EANK5E,EAML4E,SANKZ,EAQiCpE,KAAK2C,MAArC2F,EARDlE,EAQCkE,cAAeD,EARhBjE,EAQgBiE,aACvB,OACEhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAWlK,MAAM,aAAaC,YAAY,MAAMC,QAAS,KACvDvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACsQ,EAAD,MACAxQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACuQ,EAAD,CACE9N,KAAM4B,EACNa,aAAcA,EACd4E,aAAcA,EACdC,cAAeA,EACfnD,SAAUA,EACVoD,aAAc,SAAAV,GAAC,OAAI7D,EAAKH,SAAS,CAAEwE,aAAcR,KACjDY,aAAcjD,EACdkD,WAAY,kBAAMlD,KAClBgD,kBAAmB,SAACpD,EAAcuD,GAAf,OACjB3E,EAAK+K,sBAAsB3J,EAAGuD,OAIpCtK,EAAAC,EAAAC,cAACyQ,EAAD,CAAUvL,aAAcA,EAAc0B,SAAUA,KAElD9G,EAAAC,EAAAC,cAAC0Q,EAAD,CAAgBjO,KAAMyC,EAAcuB,SAAUA,aA7ElBvE,IAAM9B,WAAvB4P,EAKZ7N,aAAsB,CAC3ByE,SAAU4C,EACVvC,QAASuC,EACT/C,SAAU+C,qJC5BbmH,IAAmBC,iBAAiB,OAAQ,CAE3C5M,MAAO,CAEL,CAAC6M,MAAO,cAAeC,MAAO,cAE9B,CAACD,MAAO,iBAAkBC,MAAO,WAEjC,CAACD,MAAO,+BAA2BC,MAAO,cAE1C,CAACD,MAAO,MAAOC,MAAO,OAEtB,CAACD,MAAO,eAAgBC,MAAO,WAE/B,CAACD,MAAO,aAAcC,MAAO,UAE7B,CAACD,MAAO,qBAAsBC,MAAO,WAErC,CAACD,MAAO,4BAA6BC,MAAO,QAE5C,CAACD,MAAO,qDAAsDC,MAAO,UAErE,CAACD,MAAO,UAAWC,MAAO,WAE1B,CAACD,MAAO,MAAOC,MAAO,UAAWC,KAAM,WAEvC,CAACF,MAAO,sBAAuBC,MAAO,cAEtC,CAACD,MAAO,OAAQG,QAAQ,GACxB,CAACH,MAAO,OAAQI,QAAQ,IAK1BC,QAAS,CAEP,CAACL,MAAO,SAAUC,MAAO,UAAWC,KAAM,SAE1C,CAACF,MAAO,KAAMC,MAAO,YAMvBK,KAAM,CACJC,iBAAkB,CAAC,WACnBC,YAAa,uCChCjB,IAAMC,EAAoD,CACxDC,KAAM,OACNC,aAAa,EACbC,cAAc,GAGKC,cAgBnB,SAAAA,EAAYpQ,GAAc,IAAA6C,EAAA,OAAA5C,OAAAmI,EAAA,EAAAnI,CAAAE,KAAAiQ,IACxBvN,EAAA5C,OAAAoI,EAAA,EAAApI,CAAAE,KAAAF,OAAAqI,EAAA,EAAArI,CAAAmQ,GAAA9P,KAAAH,KAAMH,KACD8C,MAAQ,CACXoC,MAAOlF,EAAMkF,OAHSrC,yFAOAa,GACpBvD,KAAKkQ,SACH3M,EAAUI,SAAW3D,KAAKH,MAAM8D,QAAU3D,KAAKkQ,QACjDlQ,KAAKkQ,OAAOC,QAAQ,KAAM5M,EAAUI,QAElCJ,EAAUwB,QAAU/E,KAAKH,MAAMkF,OACjC/E,KAAKkQ,OAAOE,SAAS7M,EAAUwB,yCAK5B,IAAAf,EAAAhE,KACCgF,EAAahF,KAAKH,MAAlBmF,SACAD,EAAU/E,KAAK2C,MAAfoC,MACR,OACE1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC8R,EAAA,WAAD,CACEtL,MAAOA,EACPuL,QAAST,EACTU,eAAgB,SAACL,EAAQM,EAAMzL,GAAf,OAAyBf,EAAKH,SAAS,CAAEkB,WACzDC,SAAQ,SAAAyL,GAAA,SAAAzL,EAAAqE,EAAAG,EAAAkH,GAAA,OAAAD,EAAAjK,MAAAxG,KAAAmG,WAAA,OAAAnB,EAAAsE,SAAA,kBAAAmH,EAAAnH,YAAAtE,EAAA,CAAE,SAACkL,EAAQM,EAAMzL,GAAf,OAAyBC,EAASD,KAC5C4L,eAAgB,SAAAT,GAAM,OAAIlM,EAAKkM,OAASA,aA5CRzP,IAAM9B,WAA3BsR,EAQZvP,aAAsB,CAC3BqE,MAAO,GACPpB,QAAS,EACTqB,SAAU,4LC9BNnE,UAAaD,YASAgQ,cAKnB,SAAAA,EAAY/Q,GAAe,OAAAC,OAAAmI,EAAA,EAAAnI,CAAAE,KAAA4Q,GAAA9Q,OAAAoI,EAAA,EAAApI,CAAAE,KAAAF,OAAAqI,EAAA,EAAArI,CAAA8Q,GAAAzQ,KAAAH,KACnBH,0EAGC,IAEHgR,EAFGnO,EAAA1C,KAAAI,EACwBJ,KAAKH,MAA5BmB,EADDZ,EACCY,KAAMyC,EADPrD,EACOqD,aAEd,IAAKzC,EAAM,OAAO,KAClB,IAAM+C,EAAW/C,IAASyC,EACtBnD,EAAgB,GACpB,GAAIU,EAAKmB,OAAStB,EAASK,KACzB2P,EAAU,WACL,GAAI7P,EAAKmB,OAAStB,EAASiQ,UAChCD,EAAU,SACL,GAAI7P,EAAKmB,OAAStB,EAASuB,KAChCyO,EAAU,YACL,GAAI7P,EAAKmB,OAAStB,EAASgJ,OAAQ,CACxC,GAAkB,SAAd7I,EAAKqJ,KACP,OACEhM,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVuS,YAAU,OACVC,UAAShQ,EAAK0G,GACdnD,KAAMvD,EAAK2J,WAAWsG,KAEtB5S,EAAAC,EAAAC,cAACqS,EAAD9Q,OAAAkG,OAAA,CACEgL,UAAShQ,EAAKV,SAAS,GAAGoH,IACtB1H,KAAKH,MAFX,CAGEmB,KAAMA,EAAKV,SAAS,OAK1BuQ,EAAU,YAOVA,EALO7P,EAAKmB,OAAStB,EAASsJ,IAI5BnJ,EAAK8I,QACG,MAEA,OAGF,KAEZ,OAAK+G,GAGA9N,IAAE0G,QAAQzI,EAAKV,UAQK,SAAdU,EAAKmB,MACd7B,EAAS4Q,KACPlQ,EAAKqB,SATP/B,EAAS4Q,KACP7S,EAAAC,EAAAC,cAAA,QAAM8H,IAAI,WAAW7H,UAAU,YAC5BuE,IAAE4G,IAAI3I,EAAKV,SAAU,SAACsJ,EAAO1D,GAAR,OACpB7H,EAAAC,EAAAC,cAACqS,EAAD9Q,OAAAkG,OAAA,GAAgBtD,EAAK7C,MAArB,CAA4BwG,IAAKH,EAAGlF,KAAM4I,SAS3CnJ,IAAMlC,cAAcsS,EAAS,CAClCrS,UAAWgC,IAAW,YAAD,GAAAgB,OAAiBR,EAAKmB,MAAQ,CAAEgP,MAAOnQ,EAAK8I,QAAS/F,aAC1EgN,YAAa/P,EAAKqJ,MAAQrJ,EAAKqJ,KAAK+G,cACpCJ,UAAWhQ,EAAK0G,IACfpH,IAnBM,YArD2BG,IAAM9B,6DCPtCkC,EAAaD,WAcAyQ,EADpBC,6BAkBC,SAAAD,EAAYxR,GAAc,IAAA6C,EAAA,OAAA5C,OAAAmI,EAAA,EAAAnI,CAAAE,KAAAqR,IACxB3O,EAAA5C,OAAAoI,EAAA,EAAApI,CAAAE,KAAAF,OAAAqI,EAAA,EAAArI,CAAAuR,GAAAlR,KAAAH,KAAMH,KAKR0R,kBAAoB,SAACtI,EAAyBjI,GAC5C0B,EAAK8O,YAAcxQ,EACnB0B,EAAKmB,SAAS,CAAE7C,UANhB0B,EAAKC,MAAQ,GAFWD,iFAWRuG,GAChB,IAAMwI,EAAY5S,OAAO6S,eACzB,GAA6B,IAAzBD,EAAUE,WAAd,CACA,IAAMC,EAAQH,EAAUI,WAAW,GAC7BC,EAAUF,EAAMG,eAChBhQ,EAAO+P,EAAQE,YACrB,GAAKjQ,EAAL,CACAkH,EAAMgJ,iBACNhJ,EAAMC,kBAKN,IAJA,IAAMgJ,EAAqB,wCACvBC,EAAW,EACXC,EAASrQ,EAAKqE,OACdiM,EAAM,EACHH,EAAmBI,KAAKvQ,IAI7B,GAHAoQ,EAAWE,EACXA,EAAMH,EAAmBK,UACzBL,EAAmBK,YACfF,EAAMT,EAAMY,YAAa,CAC3BJ,EAASC,EACT,MAGJT,EAAMa,SAASX,EAASK,GACxBP,EAAMc,OAAOZ,EAASM,iDAGJ,IAAAhS,EACSJ,KAAKH,MAAxB+C,EADUxC,EACVwC,KAAMoC,EADI5E,EACJ4E,SACRyM,EAAY5S,OAAO6S,eACzB,GAA6B,IAAzBD,EAAUE,WAAd,CACA,IAAMC,EAAQH,EAAUI,WAAW,GAC7Bc,EAAa3S,KAAK4S,iBAAiBhB,EAAMiB,yBAC3CC,EAAY9S,KAAK4S,iBAAiBhB,EAAMG,gBACxCgB,EAAU/S,KAAK4S,iBAAiBhB,EAAMoB,cAC1C,GAAKL,GAAeG,GAAcC,EAAlC,CAGA,IAAM5B,EAAQvQ,OAAUqS,mBAAmB,CACzCH,YACAN,YAAaZ,EAAMY,YACnBO,UACAG,UAAWtB,EAAMsB,YAEnBzB,EAAU0B,kBACVnO,EAASpC,EAAMuO,+CAGCnQ,GAChB,GAAKA,EAAL,CADkC,IAAAoS,EAEPpT,KAAKH,MAAxB+C,EAF0BwQ,EAE1BxQ,MAERoC,EAJkCoO,EAEpBpO,UAELpC,EADM5B,EAAKqS,uDAIHpN,EAAmBoE,GACpC,GAAKA,EAAL,CADyD,IAAAiJ,EAE9BtT,KAAKH,MAAxB+C,EAFiD0Q,EAEjD1Q,KAAMoC,EAF2CsO,EAE3CtO,SACRyM,EAAY5S,OAAO6S,eACzB,GAAID,EAAU8B,aAAe9B,EAAU+B,WAIvC,GAA6B,IAAzB/B,EAAUE,WAAd,CACA,IAAMC,EAAQH,EAAUI,WAAW,GAMnC7M,EAASpC,EALWqD,EAAOwN,eAAe,CAAC,CACzCtR,KAAMkI,EACN9H,MAAOqP,EAAMY,YACbhQ,IAAKoP,EAAMsB,aAEc,UAVzBQ,MAAM,oFAaS1S,GACjB,GAAKA,EAAL,CADmC,IAAA2S,EAER3T,KAAKH,MAAxB+C,EAF2B+Q,EAE3B/Q,MAERoC,EAJmC2O,EAErB3O,UAELpC,EADQ5B,EAAK4S,uDAIV5S,IAEZmE,EADqBnF,KAAKH,MAAlBsF,UACCnE,gDAGUA,GACnB,GAAKA,EAAL,CADqC,IAAA6S,EAEV7T,KAAKH,MAAxB+C,EAF6BiR,EAE7BjR,KAAMoC,EAFuB6O,EAEvB7O,SACdhE,EAAK8S,UAAU,2BAAQ,YACvB9O,EAASpC,6CAGMiO,GAAsB,IACvBjO,EAAS5C,KAAKH,MAApB+C,KACR,GAAKA,EAAL,CACA,GAAIiO,EAAQkD,WAAalD,EAAQmD,WAAanD,EAAQoD,UAAUC,SAAS,YAAa,CACpF,IAAKrD,EAAQsD,cACX,OAEFtD,EAAUA,EAAQsD,cAEpB,IAAMzM,EAAKmJ,EAAQuD,aAAa,WAChC,GAAK1M,EACL,OAAO9E,EAAKyR,YAAY3M,qCAGjB,IAAA1D,EAAAhE,KAAAsU,EAC8BtU,KAAKH,MAA5BmB,EADPsT,EACC1R,KAAYa,EADb6Q,EACa7Q,aACpB,OACEpF,EAAAC,EAAAC,cAAA,OACEC,UAAU,qBACV+V,cAAe,SAACtL,GAAD,OAA6BjF,EAAKwQ,kBAAkBvL,KAEnE5K,EAAAC,EAAAC,cAACkW,EAAD,CACEzT,KAAMA,EACNyC,aAAcA,+CAMJ6J,GAAkC,IAAAnJ,EAAAnE,KAC1C0U,EAAsB1U,KAAKH,MAA3B6U,kBACFzO,EAASjG,KAAK4S,iBAAiBtF,EAAErH,QACnCjF,EAAOiF,EACX,GAAKA,IACDA,EAAO9D,OAAStB,EAASuB,OAC3BpB,EAAOiF,EAAOyF,QAEX1K,GAAL,CACA,IAAM2T,EAAc3T,EACpB,OACE3C,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CAAMlN,GAAG,QACPrJ,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CAAUC,UAAQ,EAAC/S,KAAMf,EAAKmK,aAC9B9M,EAAAC,EAAAC,cAACwW,EAAA,EAAD,MACA1W,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACE9S,KAAK,eACLiH,QAAS,kBAAM7E,EAAK6Q,uBAErBhU,EAAK+I,eACJ1L,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACE9S,KAAK,eACLiH,QAAS,kBAAM7E,EAAK8Q,kBAAkBjU,MAGzCA,EAAK8I,SACJzL,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACE9S,KAAK,kBACLiH,QAAS,kBAAM7E,EAAK+Q,qBAAqBlU,MAG5CiF,EAAO9D,OAAStB,EAASuB,MAAQ6D,EAAOyF,QAAUzF,EAAOyF,OAAOvJ,OAAStB,EAASgJ,QACjFxL,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CAAU9S,KAAK,iBACZ2S,GAAqBA,EAAkB/K,IAAI,SAAAU,GAAI,OAC9ChM,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACExO,IAAKgE,EACLtI,KAAMsI,EACNrB,QAAS,kBAAM7E,EAAKgR,mBAAmBlP,EAAQoE,QAGnDhM,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACE9S,KAAK,WACLiH,QAAS,kBAAM7E,EAAKgR,mBAAmBlP,EAAQmP,OAAO,2BAA4B,YAIvFpU,EAAKmB,OAAStB,EAASgJ,QACtBxL,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACE9S,KAAK,gBACLiH,QAAS,kBAAM7E,EAAKkR,mBAAmBrU,MAG3C3C,EAAAC,EAAAC,cAACwW,EAAA,EAAD,MACA1W,EAAAC,EAAAC,cAACsW,EAAA,EAAD,CACE9S,KAAK,UACLiH,QAAS,kBAAM7E,EAAKmR,cAAcX,eA1MFlU,IAAM9B,aASvC+B,aAAsB,CAC3BgU,kBAAmB,CAAC,MAAO,MAAO,MAAO,QACzCvP,SAAU,aACVH,SAAU","file":"static/js/main.4b0cb5f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport Editor from './Editor/Editor';\nimport contract from './sample/contract';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Editor defaultSource={contract} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default \n`#各方基本信息\n甲方：[北京星核软件有限公司]{ORG}\n统一社会信用代码：[345976348]{SOC}\n法定代表人：[张鸿峰]{PER}\n地址：[北京市朝阳区方恒国际D座2806]{LOC}\n乙方：[孙继顺]{PER}\n身份证号：[230101197701018888]{ID}\n手机号：[13945018888]{MOBILE}\n---\n\n甲乙双方经友好协商，达成如下协议。\n\n#标的.租赁 #描述\n一、{#标的.租赁 #描述.地址 #描述.数量 甲方租赁乙方所有的位于[北京市朝阳区南磨房路37号]{LOC}门市房[一间]{QT}}。{#描述.面积 使用面积为[105平方米]{AREA}}。{#标的.租赁.租期 租期为[2019年1月1日]{DATE}至[2019年12月31日]{DATE}}；{#标的.租赁.租金 租金为[十万元人民币]{MONEY value=100000}}。\n\n#标的.租赁.用途\n二、该门市房的用途为新注册公司的经营地。\n\n#标的.付款方式.银行 #标的.租赁.计费方式.按月结算\n三、租金按月结算。{#约定.承租方.支付.租金 甲方每月[一日]{DATE}向乙方指定账户一次汇入当月租金。}\n\n#约定.承租方.支付.定金 #事件.合同生效\n四、甲方应于合同生效起[五日内]{DUE}向乙方支付定金[一万元整]{MONEY}。\n\n#约定.出租方.交付.租赁物 #事件.履约.出租方.交付\n五、乙方应在收到定金给交给乙方钥匙用于提前装修。装修费用由甲方自行承担。\n\n#约定\n六、{#约定.承租方.支付.押金 甲方应于[计租日前]{DUE}向乙方支付押金[一万元整]{MONEY}。}{#约定.出租方.返还押金 #事件.合同期满 #事件.合同解除 租赁期满或合同解除后[两日内]{DUE}，乙方应无息返还。}\n\n{#事件.违约 #违约责任\n  七、违约责任\n\n  #事件.违约 #违约.付款方.付款 #违约责任.补偿.违约金 #违约责任.补偿.违约金.计算方式.每逾期一天\n  1. 付款方未按照约定付款的，每逾期[一天]{PERIOD}，应按逾期金额的[1%]{RATE}向收款方支付违约金。\n\n  #事件.违约 #违约.出租方.交付.租赁物 #违约责任.补偿.违约金.计算方式.每逾期一天 #违约责任.补偿.顺延\n  2. 乙方延迟交房的，每逾期[一天]{PERIOD}，应向甲方支付违约金[100元]{DATE}，并将租期做相应的顺延。\n  \n}\n\n{#事件.不可抗力 #约定.解除合同\n  八、发生如下情形，任何一方有权解除合同，并不承担违约责任：\n\n  #事件.不可抗力.政府行为.拆迁\n  1. 该门市房被政府列入拆迁范围；\n\n  #事件.不可抗力.重大灾害\n  2. 发生地震、火灾等不可抗力。\n\n}\n\n#争议解决 #争议解决.方式.法院起诉 #争议解决.地点.合同一方所在地\n九、双方发生争议协调不成的，应向甲方所在地人民法院起诉。\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\ninterface Props {\n  title: string;\n  className: string;\n}\n\nexport default class Pane extends React.Component<Props> {\n\n  static propTypes = {\n    title: PropTypes.string,\n    className: PropTypes.string,\n  }\n\n  static defaultProps: Props = {\n    title: 'pane',\n    className: '',\n  }\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const { title, className, children } = this.props;\n    return (\n      <div className={classNames('pane', className)}>\n        <div className=\"pane-title\"><h2>{title}</h2></div>\n        <div className=\"pane-content\">\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes, { node } from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport SplitPane from 'react-split-pane';\nimport Pane from './Pane';\nimport SourceEditor from '../SourceEditor/SourceEditor';\nimport VisualEditor from '../VisualEditor/VisualEditor';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport 'normalize.css/normalize.css';\nimport './Editor.scss';\nimport { ReactComponent as Logo } from './logo.svg';\nimport TreeView from '../TreeView/TreeView';\n\nconst { Node, NodeType } = zaml;\n\ninterface Props {\n  defaultSource: string;\n  className: string;\n  onChange: (value: string) => void;\n}\n\ninterface State {\n  source: string\n  root: zaml.Node;\n  sourcePaneHeight: number;\n  selectedNode?: zaml.Node;\n  hoveredNode?: zaml.Node;\n}\n\nconst parse = (source: string) => {\n  let node = Node.create(NodeType.ROOT);\n  try {\n    node = zaml.parse(source);\n    (global as any).node = node;\n    console.info('Root node exported as global variable \"node\"', node);\n  } catch(err) {\n    if (err instanceof zaml.ParseError) {\n      const message = `\n        [ParseError]{ERROR.TYPE}: {#MESSAGE ${err.message}}\n\n        #SOURCE\n        content\n\n        from {#POS.START ${err.from.ln}:${err.from.col}} to {#POS.END ${err.to.ln}:${err.to.col}}\n      `;\n      node = zaml.parse(message);\n      const sourceBlock = node.querySelector('#SOURCE');\n      const { text } = err.from.line;\n      if (!sourceBlock) return node;\n      const sourceText = sourceBlock.findOneBy({type: NodeType.TEXT});\n      if (!sourceText) return node;\n      sourceText.content = `${text} `;\n      sourceText.createEntitiesFromText([{\n        type: 'ERROR',\n        start: err.from.col - 1,\n        end: err.to.col - 1,\n      }]);\n    } else {\n      node = zaml.parse(`Error: [${err.message}]{MESSAGE}`);\n      console.error(err);\n    }\n  }\n  return node;\n}\n\nexport default class Editor extends React.Component<Props, State> {\n\n  static propTypes = {\n    defaultSource: PropTypes.string,\n    onChange: PropTypes.func,\n  }\n\n  static defaultProps: Props = {\n    defaultSource: '',\n    className: '',\n    onChange: () => {},\n  }\n\n  public preventSourceChange: boolean;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      source: props.defaultSource,\n      root: parse(props.defaultSource),\n      sourcePaneHeight: -1,\n    };\n    this.onResize = _.throttle(this.onResize.bind(this), 500);\n    this.preventSourceChange = false;\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize, { passive: true });\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n  }\n\n  componentWillUpdate(nextProps: Props, nextState: State) {\n    if (nextState.selectedNode !== this.state.selectedNode) {\n      console.log('selected node:', nextState.selectedNode);\n    }\n    if (nextState.root !== this.state.root) {\n      console.log('new node:', nextState.root);\n    }\n  }\n\n  onResize() {\n    const height = window.innerHeight - 60;\n    this.setState({\n      sourcePaneHeight: height,\n    });\n  }\n\n  handleSourceChange(source: string) {\n    if (this.preventSourceChange) return;\n    this.setState({\n      root: parse(source),\n      selectedNode: undefined,\n    });\n  }\n\n  handleNodeChange(root?: zaml.Node, selected?: zaml.Node) {\n    if (!root) return;\n    this.preventSourceChange = true;\n    this.setState({\n      source: root.toSource({ simple: true }),\n      selectedNode: selected,\n    }, () => {\n      this.preventSourceChange = false;\n    });\n  }\n\n  render() {\n    const { source } = this.state;\n    const { root, sourcePaneHeight, selectedNode, hoveredNode } = this.state;\n    return (\n      <div className=\"zaml-editor\">\n        <header>\n          <a className=\"project-link\" href=\"https://github.com/nexushubs/zaml-lang/tree/master/packages/zaml-editor\"><Logo className=\"logo\" /> Editor</a>\n          <a className=\"github-link\" href=\"https://github.com/nexushubs/zaml-lang\">View on Github</a>\n        </header>\n        <section className=\"editor-panes\">\n          <SplitPane\n            split=\"vertical\"\n            defaultSize=\"33.33%\"\n            minSize={200}\n          >\n            <Pane title=\"Source\">\n              <SourceEditor\n                value={source}\n                height={sourcePaneHeight - 40}\n                onChange={(value: string) => this.handleSourceChange(value)}\n              />\n            </Pane>\n            <SplitPane split=\"vertical\" defaultSize=\"50%\">\n              <Pane title=\"Visual\">\n                <VisualEditor\n                  root={root}\n                  selectedNode={hoveredNode || selectedNode}\n                  onSelect={n => this.setState({ selectedNode: n })}\n                  onChange={(r?: zaml.Node, n?: zaml.Node) => this.handleNodeChange(r, n)}\n                />\n              </Pane>\n              <Pane title=\"AST\">\n                <TreeView\n                  root={root}\n                  selectedNode={selectedNode}\n                  onSelect={n => this.setState({ selectedNode: n })}\n                  onHover={n => this.setState({ hoveredNode: n })}\n                  onChange={n => this.handleNodeChange(root, n)}\n                />\n              </Pane>\n            </SplitPane>\n          </SplitPane>\n        </section>\n      </div>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"ZAML-logo\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M132.27,162.53,182.46,35.88h10.68L242.7,162.53h-9.83L216.64,122H158.11l-16.23,40.58Zm81.16-48.7L187.38,45.7l-26.7,68.13Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M404.81,35.88h8.54V154.42h68.14v8.12H404.81Z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  fill: \"#fff\",\n  cx: 91,\n  cy: 44.5,\n  r: 4\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M115.47,35.5h-5a54.66,54.66,0,0,0-1-10.36c-1.07-4.28-6.09-10.34-6.3-10.6l-1.5-1.8-5.3,11.14-1-2c-2.21-4.43-10.89-7.42-11.87-7.75l-2.19-.73L83.4,35.5H36v0c-7.77.27-14,11.14-14,19s6.23,9.71,14,10v0H89.75L22.31,154.42v8.12h92.32l4.23.11S121,159.5,121,153.5s-3.4-15-12.5-15c-6.78,0-14.5,5-23.5,7S60,147.3,54.63,147c5.75-5.44,12.61-12,19.66-19H92.56l.42-.37c1-.87,24.31-21.36,30.37-34.5s7.1-54.83,7.14-56.59l0-1.59ZM49.84,147.41c-3.23-.24-7.53-.76-9.84-1.91a10.79,10.79,0,0,1-4.46-3.93l9.58-12.91,22.46,1.73C61.06,136.77,54.88,142.66,49.84,147.41ZM95,63.5s-1.76-7.52-1-10c1-3.4,7.94-10.83,12-15h8.53c0,.53,0,1.17,0,1.9l-.1.41C109,43.74,97.93,51.53,97,53.5S96.52,61,99.31,64.66c-1.35-.1-2.72-.27-4-.44l-.09-.06A4.8,4.8,0,0,0,95,63.5ZM109,76a79.27,79.27,0,0,1-9,2.49c-5,1-13,0-13,0l3-8s11,0,15-1a22.68,22.68,0,0,0,6.55-3.2C110.86,69.46,110,72.72,109,76ZM100,55.5c1.27-4.12,11.13-10.58,14.13-12.46l.28,1.1c-.09,2-.25,4.37-.5,7-4.19,1.21-7.81,2.49-8.57,3.26-1.53,1.54-2.77,6.17-1.83,10.35a22.78,22.78,0,0,1-2.67,0C100.42,62.8,99.38,57.51,100,55.5Zm12.46,6.2a52.93,52.93,0,0,1-7,2.68c.39-2.42,1.09-5.83,2-7.11s3.41-2.62,6.16-3.69C113.36,56.12,113,58.85,112.46,61.7ZM93.9,103.48l-2.23,2.41c-2.73.33-7.34.94-10.66,1.61-5,1-14-1-14-1l5-7s10,2,15,2a46.82,46.82,0,0,0,9.79-1.43Q95.42,101.83,93.9,103.48Zm-18,18.63c-2.09.61-8.46,2.39-10.95,2.39-3,0-11-2-11-2l6-7s10,1,14,1c2.58,0,7.21-1.62,10.2-2.77C81.48,116.53,78.72,119.34,75.95,122.11Zm20.16-16.6.2-.23v0l13.94,1c-1.5,1.69-3,3.36-4.58,5L92.86,109C94,107.83,95,106.67,96.1,105.52Zm3.83-4.64c.83-1.11,1.63-2.24,2.39-3.39l15.58-.87a80.42,80.42,0,0,1-5,6.6Zm2.14-8.73c-2.72.92-7.36,2.36-10.07,2.36-4,0-14-2-14-2l4-7s12,1,17,0a29.42,29.42,0,0,0,7.62-2.87A78.48,78.48,0,0,1,102.07,92.14Zm8.3-10.92,13.49-1.45c-.29,1.68-.6,3.27-.94,4.76L109,84.78Q109.71,83,110.37,81.23Zm1.71-5q.37-1.21.71-2.4l12.31-2.66c-.18,1.52-.38,3-.59,4.49Zm13.51-9.45-11.44,1.84q.49-2.1.88-4.1l11-2.33C125.89,63.65,125.75,65.19,125.59,66.73Zm.8-9-10.45,1.6c.27-1.72.49-3.39.68-5L126.78,52C126.67,53.82,126.54,55.73,126.39,57.69Zm.64-10-9.91,1.46c.11-1.41.2-2.73.26-3.94l9.86-1.83C127.19,44.71,127.12,46.16,127,47.72Zm.35-7.55-9.85,1.1c0-.86,0-1.62,0-2.27l.54-2.71,9.36,1.76C127.44,38.62,127.41,39.35,127.38,40.17ZM103,22.5c1.6,2.16,2.45,2.8,3,5a38,38,0,0,1,1.48,7.5L95,34.5Zm-16-1c2.86,1.2,5.92,2.84,7,5l.57,1.12L91.15,34.8,86.36,35Zm-14.15,40c2.93-3.55,7-9.51,6.15-11s-9.88-8.63-14.57-12h5c3.95,2.86,15,11.13,16.6,15,.66,1.62-2.73,5.58-5,8Zm-8.69,0c2.51-3.93,6.93-11.56,5.59-14.49-1.2-2.61-7.5-6.27-11.75-8.51h4.38C65.77,41,74.46,47.72,76,51.5c.7,1.73-3,7.1-5.09,10ZM58.29,44.86c-1.17-2.24-4.34-4.68-6.84-6.36h5c3.41,2.86,9.22,8,9.44,10s-1.62,9.22-2.66,13H53.83C55.92,57,59.82,47.78,58.29,44.86ZM49.73,38.5c1.57,2.07,3.73,5.17,4,6.9.34,2.07-.46,11.5-.89,16.1H44.16c2.25-4,6.89-12.79,5.84-16a25.41,25.41,0,0,0-4.36-7ZM38,38.5h6.64c1.16,2.25,2.5,5.21,2.5,6.8,0,2.17-2.5,11.94-3.61,16.2H38a33,33,0,0,0,2-11A43.6,43.6,0,0,0,38,38.5Zm45.1,23c3.13-3,7.22-8,6.58-9.11-1.23-2.1-11.76-9.83-18.09-13.89h33.72C100.81,42.24,93.63,48.44,92.43,51c-1.05,2.24-1.78,8.57,1.36,12.27L91,61.5ZM91.43,125H77.3c3.76-3.75,7.52-7.58,11.15-11.36l13.63,1.29C97.09,119.91,92.76,123.82,91.43,125Zm28.4-31.54-14.58-.89q.75-1.37,1.44-2.76l15.15-1.15a26.58,26.58,0,0,1-1.19,3.21C120.4,92.39,120.12,92.92,119.83,93.46Z\"\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  fill: \"#fff\",\n  x: 255,\n  y: 36.5,\n  width: 14.69,\n  height: 15,\n  rx: 1.5,\n  ry: 1.5\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  fill: \"#fff\",\n  x: 258.07,\n  y: 55.56,\n  width: 8.54,\n  height: 106.97\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  fill: \"#fff\",\n  points: \"364.01 35.88 317.88 151.85 274.33 42.9 274.33 64.8 313.82 162.53 321.72 162.53 368.93 45.7 368.93 162.53 377.47 162.53 377.47 35.88 364.01 35.88\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 500 180\"\n  }, props), _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo.b94cec94.svg\";\nexport { SvgComponent as ReactComponent };","import _ from 'lodash';\nimport * as React from 'react';\nimport PropTypes, { node } from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport classNames from 'classnames';\nimport './TreeNode.scss';\n\nconst { NodeType } = zaml;\n\nexport enum NodePart {\n  Header = 'header',\n  Footer = 'footer',\n  Whole = 'whole',\n}\n\nconst nil = () => {};\n\ninterface Props {\n  node?: zaml.Node;\n  expandedNodes: string[];\n  selectedNode?: zaml.Node;\n  selectedPart?: NodePart;\n  onSelect: (node: zaml.Node) => void;\n  onSelectPart: (selectedPart: NodePart) => void;\n  onExpansionChange: (node: zaml.Node, expanded: boolean) => void;\n  onMouseEnter: (node:zaml.Node) => void;\n  onMouseOut: (node:zaml.Node) => void;\n}\n\ninterface State {\n}\n\nexport default class TreeNode extends React.Component<Props, State> {\n\n  static propTypes = {\n    node: PropTypes.shape({})\n  }\n\n  static defaultProps: Props = {\n    node: undefined,\n    expandedNodes: [],\n    selectedNode: undefined,\n    selectedPart: NodePart.Whole,\n    onSelect: nil,\n    onSelectPart: nil,\n    onExpansionChange: nil,\n    onMouseEnter: nil,\n    onMouseOut: nil,\n  }\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      node,\n      selectedNode,\n      selectedPart: _selectedPart,\n      expandedNodes,\n      onSelect,\n      onSelectPart,\n      onExpansionChange,\n      onMouseEnter,\n      onMouseOut,\n    } = this.props;\n    if (!node) return null;\n    let selectedPart = _selectedPart;\n    const expanded = expandedNodes.indexOf(node.id) > -1 || node.isRoot;\n    if (expanded && selectedPart === NodePart.Whole) {\n      selectedPart = NodePart.Header;\n    }\n    const selected = selectedNode === node;\n    const onClick = (selectedPart: NodePart) => (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onSelect(node);\n      onSelectPart(selectedPart);\n    };\n    const commonProps = {\n      onMouseEnter: (event: React.MouseEvent) => {\n        event.stopPropagation();\n        onMouseEnter(node);\n      },\n      onMouseOut: (event: React.MouseEvent) => {\n        event.stopPropagation();\n        onMouseOut(node);\n      },\n    }\n    let children: any = null;\n    if (!_.isEmpty(node.children)) {\n      children = (\n        <div key=\"children\" className=\"children\">\n          {_.map(node.children, (child, i) => <TreeNode {...this.props} key={i} node={child} />)}\n        </div>\n      );\n    } else if (node.type === 'text') {\n      children = node.content;\n    }\n    if (node.type === NodeType.TEXT) {\n      return (\n        <div\n          className={classNames('text', { selected })}\n          onClick={onClick(NodePart.Whole)}\n          {...commonProps}\n        >\n          \"{node.content}\"\n        </div>\n      )\n    } else if (node.type === NodeType.ENTITY || node.isBlock || node.isWrappingTag) {\n      const isEntity = node.type === NodeType.ENTITY;\n      const isTag = node.type === NodeType.TAG;\n      let onlyText: string | undefined;\n      if (node.children.length === 1 && (node.firstChild as zaml.Node).type === NodeType.TEXT) {\n        onlyText = (node.firstChild as zaml.Node).content;\n      }\n      let name = (isTag || isEntity) ? node.name : node.type;\n      return (\n        <div\n          className={classNames('block', {\n            expanded,\n            selected: selected && selectedPart === NodePart.Whole,\n            'node-selected': selected,\n          })}\n          onClick={expanded ? undefined : onClick(NodePart.Whole)}\n          {...commonProps}\n        >\n          {node.type !== NodeType.ROOT && (\n            <span\n              className=\"indicator\"\n              onClick={(event) => {\n                event.stopPropagation();\n                onExpansionChange(node, !expanded);\n              }}\n            >▾</span>\n          )}\n          <span\n            className={classNames('header', { selected: selected && selectedPart === NodePart.Header })}\n            onClick={expanded ? onClick(NodePart.Header) : undefined}\n          >\n            {node.openDescriptorStart}\n            {node.labels.map(label => (\n              <span key={label} className=\"prop label\">#{label}</span>\n            ))}\n            {_.keys(node.attributes).map(key => {\n              const value = node.attributes[key];\n              return (\n                <span key={key} className=\"prop attribute\">\n                  <span className=\"key\">{key}</span>\n                  <span className=\"assignment\">=</span>\n                  <span className=\"value\">{JSON.stringify(value)}</span>\n                </span>\n              );\n            })}\n            {node.openDescriptorEnd}\n          </span>\n          {expanded ? children : (\n            <span className=\"ellipsis\">{_.truncate(onlyText, { length: 10 }) || '...'}</span>\n          )}\n          <span\n            className={classNames('footer', { selected: selected && selectedPart === NodePart.Footer })}\n            onClick={expanded ? onClick(NodePart.Footer) : undefined}\n          >\n            {node.closingDescriptor}\n          </span>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport * as zaml from '@zaml/parser';\nimport { NodePart } from './TreeNode';\n\nconst { NodeType } = zaml;\n\ninterface Props {\n  selected: boolean;\n  node?: zaml.Node;\n  onClick: () => void;\n}\n\nexport default class TreePathItem extends React.Component<Props> {\n\n  static propTypes = {\n    node: PropTypes.shape({})\n  }\n\n  static defaultProps: Props = {\n    selected: false,\n    node: undefined,\n    onClick: () => {},\n  }\n\n  render() {\n    const { selected, node, onClick } = this.props;\n    if (!node) {\n      return null;\n    }\n    return (\n      <span\n        className={classNames('zaml-tree-path-item', node.type, { selected })}\n        onClick={onClick}\n      >\n        {node.descriptor}\n      </span>\n    )\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport TreeNode, { NodePart } from './TreeNode';\nimport TreePathItem from './TreePathItem';\n\ninterface Props {\n  selectedNode?: zaml.Node;\n  onSelect: (node: zaml.Node) => void;\n}\n\ninterface State {\n  nodeList: zaml.Node[];\n}\n\nexport default class TreePath extends React.Component<Props, State> {\n\n  static propTypes = {\n    node: PropTypes.shape({})\n  }\n\n  static defaultProps: Props = {\n    selectedNode: undefined,\n    onSelect: () => {},\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      nodeList: this.buildNodeList(props.selectedNode),\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const { nodeList } = this.state;\n    const node = nextProps.selectedNode;\n    if (!node) {\n      this.setState({\n        nodeList: [],\n      });\n    } else if (!_.includes(nodeList, node)) {\n      this.setState({\n        nodeList: this.buildNodeList(node),\n      });\n    }\n  }\n\n  buildNodeList(node: zaml.Node | undefined) {\n    let list: zaml.Node[] = [];\n    while (node) {\n      list.unshift(node);\n      node = node.parent;\n    }\n    return list;\n  }\n\n  render() {\n    const { selectedNode, onSelect } = this.props;\n    const { nodeList } = this.state;\n    return (\n      <div className=\"zaml-tree-path\">\n        {nodeList.map(n => (\n          <TreePathItem\n            key={n.id}\n            selected={n === selectedNode}\n            node={n}\n            onClick={() => onSelect(n)}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as zaml from '@zaml/parser';\n\ninterface Props {\n}\n\nexport default class TreeToolbar extends React.Component<Props> {\n\n  static propTypes = {\n  }\n\n  static defaultProps: Props = {\n  }\n\n  state = {\n  };\n\n  render() {\n    return (\n      <div className=\"zaml-tree-toolbar\">\n        toolbar\n      </div>\n    )\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport './TreePropEditor.scss';\nimport TabView from '../Common/TabView';\nimport { KeyValueMap } from '@zaml/parser/typings/Node';\n\ninterface Props {\n  node?: zaml.Node;\n  onChange: (node: zaml.Node) => void;\n}\n\ninterface State {\n  selectedTab?: string;\n  editingIndex: number;\n  inlineError: string;\n}\n\nenum Tab {\n  Labels = 'Labels',\n  Attributes = 'Attributes',\n  Metadata = 'Metadata',\n}\n\nconst tabs = _.values(Tab);\nconst defaultTab = tabs[0];\nconst defaultEditingIndex = -1;\n\nexport default class TreePropEditor extends React.Component<Props, State> {\n\n  static propTypes = {\n    node: PropTypes.instanceOf(zaml.Node),\n  };\n\n  static defaultProps: Props = {\n    onChange: () => {},\n  };\n\n  state = {\n    selectedTab: defaultTab,\n    editingIndex: defaultEditingIndex,\n    inlineError: '',\n  };\n\n  editingElement: HTMLInputElement | null = null;\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.node !== this.props.node) {\n      this.setState({\n        selectedTab: defaultTab,\n        editingIndex: defaultEditingIndex,\n      });\n    }\n  }\n\n  renderValue(value: any) {\n    if (value instanceof zaml.Node) {\n      return value.toSource();\n    } else {\n      return JSON.stringify(value);\n    }\n  }\n\n  renderEmptyTip() {\n    return (\n      <div className=\"select-tip\">Please select a node</div>\n    )\n  }\n\n  renderTabContent() {\n    const { node } = this.props;\n    const { selectedTab } = this.state;\n    if (!node) {\n      return this.renderEmptyTip();\n    }\n    switch(selectedTab) {\n      case Tab.Labels:\n        return this.renderLabelEditor(node);\n      case Tab.Attributes:\n        return this.renderAttributeEditor(node, node.attributes);\n      case Tab.Metadata:\n        return this.renderAttributeEditor(node, node.metadata);\n    }\n  }\n\n  focusEditingElement() {\n    if (this.editingElement) {\n      this.editingElement.focus();\n      this.editingElement.select();\n    }\n  }\n\n  handleLabelEdit(index: number) {\n    this.setState({ editingIndex: index }, () => {\n      this.focusEditingElement();\n    });\n  }\n\n  handleLabelUpdate(label: string) {\n    const { node, onChange } = this.props;\n    const { editingIndex } = this.state;\n    if (!node) return;\n    const originalLabel = node.labels[editingIndex] || '';\n    if (label !== originalLabel) {\n      try {\n        zaml.parse(`{INLINE #${label}}TESTING{/INLINE}`);\n      } catch (e) {\n        this.setState({ inlineError: 'Invalid label'});\n        return;\n      }\n      if (editingIndex === node.labels.length) {\n        node.addLabel(label);\n      } else {\n        if (label === '' || node.labels.indexOf(label) >= 0) {\n          node.removeLabel(originalLabel);\n        } else {\n          node.labels[editingIndex] = label;\n        }\n      }\n    }\n    this.cancelLabelEditing();\n    onChange(node);\n  }\n\n  cancelLabelEditing() {\n    this.setState({\n      editingIndex: defaultEditingIndex,\n      inlineError: '',\n    });\n  }\n  \n  renderLabelEditor(node: zaml.Node) {\n    const { editingIndex, inlineError } = this.state;\n    const labels = [...node.labels, ''];\n    return (\n      <div className=\"label-editor\">\n        <table>\n          <tbody>\n          {labels.map((label, i) => (\n            <tr\n              key={label}\n              className={classNames({ error: i === editingIndex && inlineError })}\n            >\n              <td className=\"marker\">{label || i === editingIndex ? '#': ''}</td>\n              {i === editingIndex ?\n                <td>\n                  <input\n                    ref={ref => this.editingElement = ref}\n                    defaultValue={label}\n                    onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\n                      this.handleLabelUpdate(event.currentTarget.value);\n                    }}\n                    onKeyDown={(event: React.KeyboardEvent<HTMLInputElement>) => {\n                      if (event.key === 'Enter') {\n                        this.handleLabelUpdate(event.currentTarget.value);\n                      } else if (event.key === 'Escape') {\n                        this.cancelLabelEditing();\n                      }\n                    }}\n                  />\n                </td>\n              :\n                <td\n                  className=\"editable\"\n                  onClick={() => this.handleLabelEdit(i)}\n                >\n                  {label}\n                </td>\n              }\n            </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  renderAttributeEditor(node: zaml.Node, props: KeyValueMap) {\n    const keys = Object.keys(props);\n    return (\n      <div className=\"attribute-editor\">\n        <table>\n          <tbody>\n            {keys.map(key => (\n              <tr key={key}>\n                <th>{key}</th>\n                <td>{this.renderValue(props[key])}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  render() {\n    const { node } = this.props;\n    const { selectedTab } = this.state;\n    return (\n      <div className=\"zaml-prop-editor\">\n        <TabView\n          tabs={tabs}\n          selectedTab={selectedTab}\n          onTabChange={(tab: string) => this.setState({ selectedTab: tab })}\n        >\n          {this.renderTabContent()}\n        </TabView>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TabView.scss';\n\ninterface Props {\n  tabs: string[];\n  selectedTab: string;\n  onTabChange: (tab: string) => void;\n}\n\nexport default class TabView extends React.Component<Props> {\n\n  render() {\n    const { tabs, selectedTab, onTabChange, children } = this.props\n    return (\n      <div className=\"tab-view\">\n        <ul className=\"tabs\">\n          {tabs.map(tab => (\n            <li\n              key={tab}\n              className={classNames('tab', { selected: tab === selectedTab })}\n              onClick={() => onTabChange(tab)}\n            >\n              <span className=\"label\">{tab}</span>\n            </li>\n          ))}\n        </ul>\n        <div className=\"content\">\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport SplitPane from 'react-split-pane';\nimport TreeNode, { NodePart } from './TreeNode';\nimport TreePath from './TreePath';\nimport TreeToolbar from './TreeToolbar';\nimport TreePropEditor from './TreePropEditor';\nimport './TreeView.scss';\n\ninterface Props {\n  root?: zaml.Node;\n  selectedNode?: zaml.Node;\n  onSelect: (node: zaml.Node) => void;\n  onHover: (node?: zaml.Node) => void;\n  onChange: (node?: zaml.Node) => void;\n}\n\ninterface State {\n  selectedPart: NodePart;\n  expandedNodes: string[];\n}\n\nconst nil = () => {};\n\nexport default class TreeView extends React.Component<Props, State> {\n  static propTypes = {\n    node: PropTypes.shape({}),\n  };\n\n  static defaultProps: Props = {\n    onSelect: nil,\n    onHover: nil,\n    onChange: nil,\n  };\n\n  state = {\n    selectedPart: NodePart.Header,\n    expandedNodes: [],\n  };\n\n  handleExpansionChange(node: zaml.Node, expanded: boolean) {\n    const { selectedNode } = this.props;\n    const { expandedNodes } = this.state;\n    if (selectedNode === node) {\n      this.setState({\n        selectedPart: expanded ? NodePart.Header : NodePart.Whole,\n      });\n    }\n    if (expanded && !_.includes(expandedNodes, node.id)) {\n      this.setState({\n        expandedNodes: [...expandedNodes, node.id],\n      });\n    } else if (!expanded && _.includes(expandedNodes, node.id)) {\n      this.setState({\n        expandedNodes: _.without(expandedNodes, node.id),\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const { selectedNode } = nextProps;\n    if (selectedNode && selectedNode !== this.props.selectedNode) {\n      const { expandedNodes } = this.state;\n      const nodeIds = selectedNode.path.map(n => n.id);\n      this.setState({\n        expandedNodes: _.union(expandedNodes, nodeIds)\n      });\n    }\n  }\n\n  render() {\n    const {\n      root,\n      selectedNode,\n      onSelect,\n      onHover,\n      onChange,\n    } = this.props;\n    const { expandedNodes, selectedPart } = this.state;\n    return (\n      <div className=\"zaml-tree-view\">\n        <SplitPane split=\"horizontal\" defaultSize=\"60%\" minSize={200}>\n          <div className=\"tree-container\">\n            <TreeToolbar />\n            <div className=\"tree\">\n              <TreeNode\n                node={root}\n                selectedNode={selectedNode}\n                selectedPart={selectedPart}\n                expandedNodes={expandedNodes}\n                onSelect={onSelect}\n                onSelectPart={p => this.setState({ selectedPart: p })}\n                onMouseEnter={onHover}\n                onMouseOut={() => onHover()}\n                onExpansionChange={(n: zaml.Node, expanded: boolean) =>\n                  this.handleExpansionChange(n, expanded)\n                }\n              />\n            </div>\n            <TreePath selectedNode={selectedNode} onSelect={onSelect} />\n          </div>\n          <TreePropEditor node={selectedNode} onChange={onChange} />\n        </SplitPane>\n      </div>\n    );\n  }\n}\n","import CodeMirror from 'codemirror';\nimport 'codemirror/addon/mode/simple';\n\n// https://codemirror.net/demo/simplemode.html\n// TODO support error linting\n\n(CodeMirror as any).defineSimpleMode(\"zaml\", {\n  // The start state contains the rules that are initially used\n  start: [\n    // Block labels\n    {regex: /#[^#\\s\\n}]+/, token: 'variable-3'},\n    // Entity tag & block tag without attributes\n    {regex: /{\\/?([^\\s}]+)}/, token: 'keyword'},\n    // attribute names\n    {regex: /[^\\s{\\n]+(?=[:：=][^\\n])/, token: 'variable-2'},\n    // Block brackets\n    {regex: /{|}/, token: 'def'},\n    // Block starting tag\n    {regex: /(?={)[^\\s}]+/, token: 'keyword'},\n    // Entity text content\n    {regex: /\\[[^\\]]+\\]/, token: \"string\"},\n    // Block tag\n    {regex: /(?:BLOCK|INLINE)\\b/, token: \"keyword\"},\n    // Special values\n    {regex: /true|false|null|undefined/, token: \"atom\"},\n    // Numbers\n    {regex: /0x[a-f\\d]+|[-+]?(?:\\.\\d+|\\d+\\.?\\d*)(?:e[-+]?\\d+)?/i, token: \"number\"},\n    // Single line comment\n    {regex: /~[^~].*/, token: \"comment\"},\n    // Multi-line comment start\n    {regex: /~~~/, token: \"comment\", next: \"comment\"},\n    // ?\n    {regex: /\\/(?:[^\\\\]|\\\\.)*?\\//, token: \"variable-3\"},\n    // Intends\n    {regex: /[\\{]/, indent: true},\n    {regex: /[\\}]/, dedent: true},\n    // {regex: /[a-z$][\\w$]*/, token: \"variable\"},\n    // {regex: /<</, token: \"meta\", mode: {spec: \"xml\", end: />>/}}\n  ],\n  // The multi-line comment state.\n  comment: [\n    // Multi-line comment ends\n    {regex: /.*?~~~/, token: \"comment\", next: \"start\"},\n    // Multi-line comment continues\n    {regex: /.*/, token: \"comment\"}\n  ],\n  // The meta property contains global information about the mode. It\n  // can contain properties like lineComment, which are supported by\n  // all modes, and also directives like dontIndentStates, which are\n  // specific to simple modes.\n  meta: {\n    dontIndentStates: [\"comment\"],\n    lineComment: \"~\"\n  }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport codemirror from 'codemirror';\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport './SourceEditor.scss';\nimport './codemirror-mode';\n\ninterface Props {\n  value: string;\n  height: number;\n  onChange: (value: string) => void;\n}\n\ninterface State {\n  value: string;\n}\n\nconst codeMirrorOptions: codemirror.EditorConfiguration = {\n  mode: 'zaml',\n  lineNumbers: true,\n  lineWrapping: true,\n};\n\nexport default class SourceEditor extends React.Component<Props, State> {\n\n  static propTypes = {\n    value: PropTypes.string,\n    height: PropTypes.number,\n    onChange: PropTypes.func,\n  }\n\n  static defaultProps: Props = {\n    value: '',\n    height: -1,\n    onChange: () => {},\n  }\n\n  public editor?: CodeMirror.Editor;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.editor) {\n      if (nextProps.height !== this.props.height && this.editor) {\n        this.editor.setSize(null, nextProps.height);\n      }\n      if (nextProps.value !== this.props.value) {\n        this.editor.setValue(nextProps.value);\n      }\n    }\n  }\n\n  render() {\n    const { onChange } = this.props;\n    const { value } = this.state;\n    return (\n      <div className=\"zaml-source\">\n        <CodeMirror\n          value={value}\n          options={codeMirrorOptions}\n          onBeforeChange={(editor, data, value) => this.setState({ value })}\n          onChange={(editor, data, value) => onChange(value)}\n          editorDidMount={editor => this.editor = editor}\n        />\n      </div>\n    );\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport classNames from 'classnames';\nimport './VisualNode.scss';\n\nconst { NodeType } = zaml;\n\nconst nil = () => {};\n\ninterface Props {\n  node?: zaml.Node;\n  selectedNode?: zaml.Node;\n}\n\nexport default class VisualNode extends React.Component<Props> {\n\n  static propTypes = {\n  }\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const { node, selectedNode } = this.props;\n    let element: string | null;\n    if (!node) return null;\n    const selected = node === selectedNode;\n    let children: any = [];\n    if (node.type === NodeType.ROOT) {\n      element = 'div';\n    } else if (node.type === NodeType.PARAGRAPH) {\n      element = 'p';\n    } else if (node.type === NodeType.TEXT) {\n      element = 'span';\n    } else if (node.type === NodeType.ENTITY) {\n      if (node.name === 'LINK') {\n        return (\n          <a\n            className=\"zaml-entity\"\n            node-name=\"link\"\n            node-id={node.id}\n            href={node.attributes.url}\n          >\n            <VisualNode\n              node-id={node.children[0].id}\n              {...this.props}\n              node={node.children[0]}\n            />\n          </a>\n        );\n      } else {\n        element = 'span';\n      }\n    } else if (node.type === NodeType.TAG) {\n      // children.push(\n      //   <span key=\"attributes\" className=\"attributes\">{node.name}</span>\n      // );\n      if (node.isBlock) {\n        element = 'div';\n      } else {\n        element = 'span';\n      }\n    } else {\n      element = null;\n    }\n    if (!element) {\n      return null;\n    }\n    if (!_.isEmpty(node.children)) {\n      children.push(\n        <span key=\"children\" className=\"children\">\n          {_.map(node.children, (child, i) => (\n            <VisualNode {...this.props} key={i} node={child} />\n          ))}\n        </span>\n      );\n    } else if (node.type === 'text') {\n      children.push(\n        node.content\n      );\n    }\n    return React.createElement(element, {\n      className: classNames('zaml-node', `${node.type}`, { block: node.isBlock, selected }),\n      'node-name': node.name && node.name.toLowerCase(),\n      'node-id': node.id,\n    }, children);\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport PropTypes, { node } from 'prop-types';\nimport * as zaml from '@zaml/parser';\nimport { ContextMenuTarget, Menu, MenuItem, MenuDivider } from \"@blueprintjs/core\"\nimport VisualNode from './VisualNode';\nimport './VisualEditor.scss';\nimport 'react-contexify/dist/ReactContexify.min.css';\n\nconst { NodeType } = zaml;\n\ninterface Props {\n  commonEntityNames?: string[];\n  root?: zaml.Node;\n  selectedNode?: zaml.Node;\n  onSelect: (node?: zaml.Node) => void;\n  onChange: (node?: zaml.Node, selected?: zaml.Node) => void;\n}\n\ninterface State {\n}\n\n@ContextMenuTarget\nexport default class VisualEditor extends React.Component<Props, State> {\n\n  static propTypes = {\n    commonEntityNames: PropTypes.arrayOf(PropTypes.string),\n    root: PropTypes.shape({}),\n    selectedNode: PropTypes.shape({}),\n    onSelect: PropTypes.func,\n  }\n\n  static defaultProps: Props = {\n    commonEntityNames: ['PER', 'ORG', 'LOC', 'DATE'],\n    onSelect: () => {},\n    onChange: () => {},\n  }\n\n  public currentNode?: zaml.Node;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  handleContextMenu = (event: React.MouseEvent, node?: zaml.Node) => {\n    this.currentNode = node;\n    this.setState({ node });\n  }\n\n  handleDoubleClick(event: React.MouseEvent) {\n    const selection = window.getSelection();\n    if (selection.rangeCount === 0) return;\n    const range = selection.getRangeAt(0);\n    const domNode = range.startContainer;\n    const text = domNode.textContent;\n    if (!text) return;\n    event.preventDefault();\n    event.stopPropagation();\n    const punctuationPattern = /[!?:;。！？：；]/g;\n    let startPos = 0;\n    let endPos = text.length;\n    let pos = 0;\n    while (punctuationPattern.exec(text)) {\n      startPos = pos;\n      pos = punctuationPattern.lastIndex;\n      punctuationPattern.lastIndex++;\n      if (pos > range.startOffset) {\n        endPos = pos;\n        break;\n      }\n    }\n    range.setStart(domNode, startPos);\n    range.setEnd(domNode, endPos);\n  }\n\n  handleCreateBlock() {\n    const { root, onChange } = this.props;\n    const selection = window.getSelection();\n    if (selection.rangeCount === 0) return;\n    const range = selection.getRangeAt(0);\n    const commonNode = this.getNodeByElement(range.commonAncestorContainer as HTMLElement);\n    let startNode = this.getNodeByElement(range.startContainer as HTMLElement);\n    let endNode = this.getNodeByElement(range.endContainer as HTMLElement);\n    if (!commonNode || !startNode || !endNode) {\n      return;\n    }\n    const block = zaml.Node.createBlockByRange({\n      startNode,\n      startOffset: range.startOffset,\n      endNode,\n      endOffset: range.endOffset,\n    });\n    selection.removeAllRanges();\n    onChange(root, block);\n  }\n\n  handleRemoveBlock(node?: zaml.Node) {\n    if (!node) return;\n    const { root, onChange } = this.props;\n    const parent = node.flatten();\n    onChange(root, parent);\n  }\n\n  handleCreateEntity(target: zaml.Node, name: string | null) {\n    if (!name) return;\n    const { root, onChange } = this.props;\n    const selection = window.getSelection();\n    if (selection.anchorNode !== selection.focusNode) {\n      alert('Entity is only allowed in pure text!');\n      return;\n    }\n    if (selection.rangeCount === 0) return;\n    const range = selection.getRangeAt(0);\n    const entityNodes = target.createEntities([{\n      type: name,\n      start: range.startOffset,\n      end: range.endOffset,\n    }]);\n    onChange(root, entityNodes[0]);\n  }\n\n  handleRemoveEntity(node?: zaml.Node) {\n    if (!node) return;\n    const { root, onChange } = this.props;\n    const textNode = node.removeEntity();\n    onChange(root, textNode);\n  }\n\n  handleInspect(node: zaml.Node) {\n    const { onSelect } = this.props;\n    onSelect(node);\n  }\n\n  handleSplitSentences(node?: zaml.Node) {\n    if (!node) return;\n    const { root, onChange } = this.props;\n    node.splitText('：。！？', 'SENTENCE');\n    onChange(root);\n  }\n\n  getNodeByElement(element: HTMLElement) {\n    const { root: root } = this.props;\n    if (!root) return undefined;\n    if (element.nodeType === element.TEXT_NODE || element.classList.contains('children')) {\n      if (!element.parentElement) {\n        return undefined;\n      }\n      element = element.parentElement;\n    }\n    const id = element.getAttribute('node-id');\n    if (!id) return undefined;\n    return root.getNodeById(id);\n  }\n\n  render() {\n    const { root: node, selectedNode } = this.props;\n    return (\n      <div\n        className=\"zaml-visual-editor\"\n        onDoubleClick={(event: React.MouseEvent) => this.handleDoubleClick(event)}\n      >\n        <VisualNode\n          node={node}\n          selectedNode={selectedNode}\n        />\n      </div>\n    )\n  }\n\n  renderContextMenu(e: React.MouseEvent<HTMLElement>) {\n    const { commonEntityNames } = this.props;\n    const target = this.getNodeByElement(e.target as HTMLElement);\n    let node = target;\n    if (!target) return;\n    if (target.type === NodeType.TEXT) {\n      node = target.parent;\n    }\n    if (!node) return;\n    const wrapperNode = node;\n    return (\n      <Menu id=\"menu\">\n        <MenuItem disabled text={node.descriptor} />\n        <MenuDivider />\n        <MenuItem\n          text=\"Create Block\"\n          onClick={() => this.handleCreateBlock()}\n        />\n        {node.isWrappingTag &&\n          <MenuItem\n            text=\"Remove Block\"\n            onClick={() => this.handleRemoveBlock(node)}\n          />\n        }\n        {node.isBlock &&\n          <MenuItem\n            text=\"Split Sentences\"\n            onClick={() => this.handleSplitSentences(node)}\n          />\n        }\n        {target.type === NodeType.TEXT && target.parent && target.parent.type !== NodeType.ENTITY &&\n          <MenuItem text=\"Create Entity\">\n            {commonEntityNames && commonEntityNames.map(name => (\n              <MenuItem\n                key={name}\n                text={name}\n                onClick={() => this.handleCreateEntity(target, name)}\n              />\n            ))}\n            <MenuItem\n              text=\"other...\"\n              onClick={() => this.handleCreateEntity(target, prompt('Please input entity type', 'PER'))}\n            />\n          </MenuItem>\n        }\n        {node.type === NodeType.ENTITY &&\n          <MenuItem\n            text=\"Remove Entity\"\n            onClick={() => this.handleRemoveEntity(node)}\n          />\n        }\n        <MenuDivider />\n        <MenuItem\n          text=\"Inspect\"\n          onClick={() => this.handleInspect(wrapperNode)}\n        />\n      </Menu>\n    );\n  }\n}\n"],"sourceRoot":""}